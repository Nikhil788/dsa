stack

public class Stack {
	private int arr[];
	private int top;
	private final int SIZE;
	public Stack(int size) {
		SIZE = size;
		arr = new int[SIZE];
		top = -1;
	}
	
	public void push(int data) {
		//1. reposition top (inc)
		top++;
		//2. add data at top index
		arr[top] = data;
	}
	
	public int pop() {
		int data = arr[top];
		// 1. reposition top (dec)
		top--;
		return data;
	}
	
	public int peek() {
		//1. read data from top end (top index)
		return arr[top];
	}
	
	public boolean isEmpty() {
		return top == -1;
	}
	
	public boolean isFull() {
		return top == SIZE - 1;
	}
}



package com.sunbeam;

import java.util.Scanner;

public class StackMain {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int choice, data;
		Stack s = new Stack(4);
		
		Scanner sc = new Scanner(System.in);
		do
		{
			System.out.println("Stack Demo");
			System.out.println("0. Exit");
			System.out.println("1. Push");
			System.out.println("2. Pop");
			System.out.println("3. Peek");
			System.out.println("Enter your choice : ");
			choice = sc.nextInt();
			
			switch(choice)
			{
				case 1: //push
					if(s.isFull())
						System.out.println("Stack is full");
					else
					{
						System.out.println("Enter data to added into queue : ");
						data = sc.nextInt();
						s.push(data);
					}
					break;
				case 2: //pop
					if(s.isEmpty())
						System.out.println("Stack is empty");
					else
						System.out.println("Poped Data :  " + s.pop());
					break;
				case 3:// peek
					if(s.isEmpty())
						System.out.println("Stack is empty");
					else
						System.out.println("Peeked Data :  " + s.peek());
					break;
			}
			
		}while(choice != 0);
		
		sc.close();

	}

}




